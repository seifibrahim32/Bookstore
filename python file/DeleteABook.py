# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DeleteABook.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3

from PyQt5 import QtCore, QtWidgets

from failure import Ui_Failure
from success import Ui_Success


class Ui_MainWindowDelete(object):
    def __init__(self):
        self.failure = QtWidgets.QMainWindow()
        self.ui = Ui_Failure()

    def setupUi(self, MainWindow):
        """
        Sets up the Delete GUI
        :param MainWindow:
        :return:
        """
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(370, 140)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 10, 231, 20))
        self.label.setObjectName("label")

        self.textEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(120, 40, 131, 21))
        self.textEdit.setGeometry(QtCore.QRect(110, 40, 141, 20))
        self.textEdit.setObjectName("textEdit")

        self.textEdit.textChanged.connect(self.Delete)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(150, 70, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setDisabled(True)

        self.pushButton.clicked.connect(self.Delete)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 370, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Delete a book"))
        self.label.setText(_translate("MainWindow", "Write the book's ISBN to be deleted if found"))
        self.pushButton.setText(_translate("MainWindow", "Delete"))

    def Delete(self):
        """
        Delete button appears if it is more than 4 characters
        :return:
        """
        if len(self.textEdit.text()) >= 4:
            self.pushButton.setDisabled(False)
            self.pushButton.clicked.connect(self.Try)

        elif len(self.textEdit.text()) < 4:
            self.pushButton.setDisabled(True)

    def Success(self):
        """
        Success operator
        :return:
        """
        self.success = QtWidgets.QMainWindow()
        self.ui = Ui_Success()
        self.ui.text = "Book is deleted"
        self.ui.setupUi(self.success)
        self.success.show()

    def Failure(self):
        """
        Failure operator
        :return:
        """
        self.ui.text = "Book is not available"
        self.ui.setupUi(self.failure)
        self.failure.show()

    def Try(self):
        """
        This function aims to find the query to choose if the id is available in the database then removes it
        otherwise it appears the ISBN is not available
        :return:
        """
        connection = sqlite3.connect("bookstore.db")
        cursor = connection.cursor()

        row = cursor.execute("SELECT COUNT(id) FROM bookstore WHERE id ='" + self.textEdit.text() + "'")
        row = (row.fetchone())[0]
        print(int(row))
        print(int(row) == int(1))
        if int(row) == int(1):
            cursor.execute("DELETE FROM bookstore WHERE id =\'" + self.textEdit.text() + "\'")
            connection.commit()
            self.pushButton.disconnect()
            self.Success()
        elif int(row) == 0:
            self.Failure()
            self.pushButton.disconnect()

        connection.close()


if __name__ == "__main__":
    """
    Main Program
    """
    import sys

    app = QtWidgets.QApplication(sys.argv)
    M = QtWidgets.QMainWindow()
    ui = Ui_MainWindowDelete()
    ui.setupUi(M)
    M.show()
    sys.exit(app.exec_())
